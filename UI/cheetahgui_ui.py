# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'cheetahgui.ui'
#
# Created by: PyQt5 UI code generator 5.9.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1000, 900)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.button_refresh = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_refresh.sizePolicy().hasHeightForWidth())
        self.button_refresh.setSizePolicy(sizePolicy)
        self.button_refresh.setMaximumSize(QtCore.QSize(120, 25))
        self.button_refresh.setObjectName("button_refresh")
        self.horizontalLayout.addWidget(self.button_refresh)
        self.button_runCheetah = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_runCheetah.sizePolicy().hasHeightForWidth())
        self.button_runCheetah.setSizePolicy(sizePolicy)
        self.button_runCheetah.setMaximumSize(QtCore.QSize(120, 25))
        self.button_runCheetah.setObjectName("button_runCheetah")
        self.horizontalLayout.addWidget(self.button_runCheetah)
        self.button_index = QtWidgets.QPushButton(self.centralwidget)
        self.button_index.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_index.sizePolicy().hasHeightForWidth())
        self.button_index.setSizePolicy(sizePolicy)
        self.button_index.setMaximumSize(QtCore.QSize(120, 25))
        self.button_index.setObjectName("button_index")
        self.horizontalLayout.addWidget(self.button_index)
        self.button_viewhits = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_viewhits.sizePolicy().hasHeightForWidth())
        self.button_viewhits.setSizePolicy(sizePolicy)
        self.button_viewhits.setMaximumSize(QtCore.QSize(120, 25))
        self.button_viewhits.setObjectName("button_viewhits")
        self.horizontalLayout.addWidget(self.button_viewhits)
        self.button_blanksum = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_blanksum.sizePolicy().hasHeightForWidth())
        self.button_blanksum.setSizePolicy(sizePolicy)
        self.button_blanksum.setMaximumSize(QtCore.QSize(120, 25))
        self.button_blanksum.setObjectName("button_blanksum")
        self.horizontalLayout.addWidget(self.button_blanksum)
        self.button_hitsum = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_hitsum.sizePolicy().hasHeightForWidth())
        self.button_hitsum.setSizePolicy(sizePolicy)
        self.button_hitsum.setMaximumSize(QtCore.QSize(120, 25))
        self.button_hitsum.setObjectName("button_hitsum")
        self.horizontalLayout.addWidget(self.button_hitsum)
        self.button_virtualpowder = QtWidgets.QPushButton(self.centralwidget)
        self.button_virtualpowder.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_virtualpowder.sizePolicy().hasHeightForWidth())
        self.button_virtualpowder.setSizePolicy(sizePolicy)
        self.button_virtualpowder.setMaximumSize(QtCore.QSize(120, 25))
        self.button_virtualpowder.setObjectName("button_virtualpowder")
        self.horizontalLayout.addWidget(self.button_virtualpowder)
        self.button_peakogram = QtWidgets.QPushButton(self.centralwidget)
        self.button_peakogram.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_peakogram.sizePolicy().hasHeightForWidth())
        self.button_peakogram.setSizePolicy(sizePolicy)
        self.button_peakogram.setMaximumSize(QtCore.QSize(120, 25))
        self.button_peakogram.setObjectName("button_peakogram")
        self.horizontalLayout.addWidget(self.button_peakogram)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.table_status = QtWidgets.QTableWidget(self.centralwidget)
        self.table_status.setLineWidth(3)
        self.table_status.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.table_status.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.table_status.setRowCount(10)
        self.table_status.setObjectName("table_status")
        self.table_status.setColumnCount(12)
        item = QtWidgets.QTableWidgetItem()
        self.table_status.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_status.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_status.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_status.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_status.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_status.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_status.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_status.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_status.setHorizontalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_status.setHorizontalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_status.setHorizontalHeaderItem(10, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_status.setHorizontalHeaderItem(11, item)
        self.table_status.horizontalHeader().setCascadingSectionResizes(False)
        self.table_status.horizontalHeader().setDefaultSectionSize(90)
        self.table_status.horizontalHeader().setHighlightSections(False)
        self.verticalLayout.addWidget(self.table_status)
        self.horizontalLayout2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout2.setObjectName("horizontalLayout2")
        self.verticalLayout.addLayout(self.horizontalLayout2)
        self.gridLayout.addLayout(self.verticalLayout, 1, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 1000, 22))
        self.menuBar.setObjectName("menuBar")
        self.menuFile = QtWidgets.QMenu(self.menuBar)
        self.menuFile.setObjectName("menuFile")
        self.menuCheetah = QtWidgets.QMenu(self.menuBar)
        self.menuCheetah.setObjectName("menuCheetah")
        self.menuAnalysis = QtWidgets.QMenu(self.menuBar)
        self.menuAnalysis.setObjectName("menuAnalysis")
        self.menu_masks = QtWidgets.QMenu(self.menuBar)
        self.menu_masks.setObjectName("menu_masks")
        self.menuPowder = QtWidgets.QMenu(self.menuBar)
        self.menuPowder.setObjectName("menuPowder")
        self.menuLogs = QtWidgets.QMenu(self.menuBar)
        self.menuLogs.setObjectName("menuLogs")
        self.menuUtilities = QtWidgets.QMenu(self.menuBar)
        self.menuUtilities.setObjectName("menuUtilities")
        self.menuCrystFEL = QtWidgets.QMenu(self.menuBar)
        self.menuCrystFEL.setObjectName("menuCrystFEL")
        self.menuCalibration = QtWidgets.QMenu(self.menuBar)
        self.menuCalibration.setObjectName("menuCalibration")
        MainWindow.setMenuBar(self.menuBar)
        self.menu_file_autorefresh = QtWidgets.QAction(MainWindow)
        self.menu_file_autorefresh.setObjectName("menu_file_autorefresh")
        self.menu_file_refreshtable = QtWidgets.QAction(MainWindow)
        self.menu_file_refreshtable.setObjectName("menu_file_refreshtable")
        self.menu_file_startcrawler = QtWidgets.QAction(MainWindow)
        self.menu_file_startcrawler.setObjectName("menu_file_startcrawler")
        self.menu_file_command = QtWidgets.QAction(MainWindow)
        self.menu_file_command.setObjectName("menu_file_command")
        self.menu_file_quit = QtWidgets.QAction(MainWindow)
        self.menu_file_quit.setObjectName("menu_file_quit")
        self.menu_mask_badpixdark = QtWidgets.QAction(MainWindow)
        self.menu_mask_badpixdark.setObjectName("menu_mask_badpixdark")
        self.menu_mask_badpixbright = QtWidgets.QAction(MainWindow)
        self.menu_mask_badpixbright.setEnabled(False)
        self.menu_mask_badpixbright.setObjectName("menu_mask_badpixbright")
        self.actionDefault_particle_display_settings = QtWidgets.QAction(MainWindow)
        self.actionDefault_particle_display_settings.setObjectName("actionDefault_particle_display_settings")
        self.actionHistogram_clip = QtWidgets.QAction(MainWindow)
        self.actionHistogram_clip.setCheckable(True)
        self.actionHistogram_clip.setChecked(True)
        self.actionHistogram_clip.setObjectName("actionHistogram_clip")
        self.actionAuto_scale_levels = QtWidgets.QAction(MainWindow)
        self.actionAuto_scale_levels.setCheckable(True)
        self.actionAuto_scale_levels.setChecked(True)
        self.actionAuto_scale_levels.setObjectName("actionAuto_scale_levels")
        self.menu_cheetah_processselected = QtWidgets.QAction(MainWindow)
        self.menu_cheetah_processselected.setObjectName("menu_cheetah_processselected")
        self.menu_cheetah_relabel = QtWidgets.QAction(MainWindow)
        self.menu_cheetah_relabel.setObjectName("menu_cheetah_relabel")
        self.menu_cheetah_autorun = QtWidgets.QAction(MainWindow)
        self.menu_cheetah_autorun.setObjectName("menu_cheetah_autorun")
        self.menu_mask_combine = QtWidgets.QAction(MainWindow)
        self.menu_mask_combine.setObjectName("menu_mask_combine")
        self.menu_mask_makecspadgain = QtWidgets.QAction(MainWindow)
        self.menu_mask_makecspadgain.setObjectName("menu_mask_makecspadgain")
        self.menu_mask_translatecspadgain = QtWidgets.QAction(MainWindow)
        self.menu_mask_translatecspadgain.setObjectName("menu_mask_translatecspadgain")
        self.menu_analysis_peakogram = QtWidgets.QAction(MainWindow)
        self.menu_analysis_peakogram.setObjectName("menu_analysis_peakogram")
        self.menu_analysis_saturation = QtWidgets.QAction(MainWindow)
        self.menu_analysis_saturation.setObjectName("menu_analysis_saturation")
        self.menu_analysis_hitrate = QtWidgets.QAction(MainWindow)
        self.menu_analysis_hitrate.setObjectName("menu_analysis_hitrate")
        self.menu_analysis_resolution = QtWidgets.QAction(MainWindow)
        self.menu_analysis_resolution.setObjectName("menu_analysis_resolution")
        self.menu_powder_hits = QtWidgets.QAction(MainWindow)
        self.menu_powder_hits.setObjectName("menu_powder_hits")
        self.menu_powder_hits_det = QtWidgets.QAction(MainWindow)
        self.menu_powder_hits_det.setObjectName("menu_powder_hits_det")
        self.menu_powder_blank = QtWidgets.QAction(MainWindow)
        self.menu_powder_blank.setObjectName("menu_powder_blank")
        self.menu_powder_blank_det = QtWidgets.QAction(MainWindow)
        self.menu_powder_blank_det.setObjectName("menu_powder_blank_det")
        self.menu_powder_peaks_hits = QtWidgets.QAction(MainWindow)
        self.menu_powder_peaks_hits.setObjectName("menu_powder_peaks_hits")
        self.menu_powder_peaks_blank = QtWidgets.QAction(MainWindow)
        self.menu_powder_peaks_blank.setObjectName("menu_powder_peaks_blank")
        self.menu_log_batch = QtWidgets.QAction(MainWindow)
        self.menu_log_batch.setObjectName("menu_log_batch")
        self.menu_log_cheetah = QtWidgets.QAction(MainWindow)
        self.menu_log_cheetah.setObjectName("menu_log_cheetah")
        self.menu_log_cheetahstatus = QtWidgets.QAction(MainWindow)
        self.menu_log_cheetahstatus.setObjectName("menu_log_cheetahstatus")
        self.menu_mask_maker = QtWidgets.QAction(MainWindow)
        self.menu_mask_maker.setObjectName("menu_mask_maker")
        self.menu_utilities_psocake = QtWidgets.QAction(MainWindow)
        self.menu_utilities_psocake.setObjectName("menu_utilities_psocake")
        self.menu_powder_darkcal = QtWidgets.QAction(MainWindow)
        self.menu_powder_darkcal.setObjectName("menu_powder_darkcal")
        self.menu_mask_view = QtWidgets.QAction(MainWindow)
        self.menu_mask_view.setObjectName("menu_mask_view")
        self.menu_file_newgeometry = QtWidgets.QAction(MainWindow)
        self.menu_file_newgeometry.setObjectName("menu_file_newgeometry")
        self.menu_utilities_calibman = QtWidgets.QAction(MainWindow)
        self.menu_utilities_calibman.setObjectName("menu_utilities_calibman")
        self.menu_powder_copydarkcal = QtWidgets.QAction(MainWindow)
        self.menu_powder_copydarkcal.setObjectName("menu_powder_copydarkcal")
        self.menu_crystfel_cellexplorer = QtWidgets.QAction(MainWindow)
        self.menu_crystfel_cellexplorer.setObjectName("menu_crystfel_cellexplorer")
        self.menu_crystfel_viewindexingresults = QtWidgets.QAction(MainWindow)
        self.menu_crystfel_viewindexingresults.setObjectName("menu_crystfel_viewindexingresults")
        self.menu_crystfel_mosflmnolatt = QtWidgets.QAction(MainWindow)
        self.menu_crystfel_mosflmnolatt.setObjectName("menu_crystfel_mosflmnolatt")
        self.menu_crystfel_mergestreams = QtWidgets.QAction(MainWindow)
        self.menu_crystfel_mergestreams.setObjectName("menu_crystfel_mergestreams")
        self.menu_calib_darkcal = QtWidgets.QAction(MainWindow)
        self.menu_calib_darkcal.setObjectName("menu_calib_darkcal")
        self.menu_calib_copydarkcal = QtWidgets.QAction(MainWindow)
        self.menu_calib_copydarkcal.setObjectName("menu_calib_copydarkcal")
        self.menu_crystfel_listevents = QtWidgets.QAction(MainWindow)
        self.menu_crystfel_listevents.setEnabled(True)
        self.menu_crystfel_listevents.setObjectName("menu_crystfel_listevents")
        self.menu_calib_currentdarkcal = QtWidgets.QAction(MainWindow)
        self.menu_calib_currentdarkcal.setObjectName("menu_calib_currentdarkcal")
        self.menu_calib_currentbadpix = QtWidgets.QAction(MainWindow)
        self.menu_calib_currentbadpix.setObjectName("menu_calib_currentbadpix")
        self.menu_calib_currentpeakmask = QtWidgets.QAction(MainWindow)
        self.menu_calib_currentpeakmask.setObjectName("menu_calib_currentpeakmask")
        self.menu_calib_currentgeom = QtWidgets.QAction(MainWindow)
        self.menu_calib_currentgeom.setObjectName("menu_calib_currentgeom")
        self.menu_crystfel_indexpdb = QtWidgets.QAction(MainWindow)
        self.menu_crystfel_indexpdb.setObjectName("menu_crystfel_indexpdb")
        self.menu_crystfel_cellexplorer_pick = QtWidgets.QAction(MainWindow)
        self.menu_crystfel_cellexplorer_pick.setObjectName("menu_crystfel_cellexplorer_pick")
        self.menu_crystfel_viewindexing_pick = QtWidgets.QAction(MainWindow)
        self.menu_crystfel_viewindexing_pick.setObjectName("menu_crystfel_viewindexing_pick")
        self.menu_crystfel_indexgeopt = QtWidgets.QAction(MainWindow)
        self.menu_crystfel_indexgeopt.setObjectName("menu_crystfel_indexgeopt")
        self.menu_crystfel_listfiles = QtWidgets.QAction(MainWindow)
        self.menu_crystfel_listfiles.setEnabled(True)
        self.menu_crystfel_listfiles.setObjectName("menu_crystfel_listfiles")
        self.menu_calib_geomtopixmap = QtWidgets.QAction(MainWindow)
        self.menu_calib_geomtopixmap.setObjectName("menu_calib_geomtopixmap")
        self.menu_calib_setdarkrun = QtWidgets.QAction(MainWindow)
        self.menu_calib_setdarkrun.setObjectName("menu_calib_setdarkrun")
        self.menu_calib_cxiviewgeom = QtWidgets.QAction(MainWindow)
        self.menu_calib_cxiviewgeom.setObjectName("menu_calib_cxiviewgeom")
        self.menu_file_modify_beamline_configuration = QtWidgets.QAction(MainWindow)
        self.menu_file_modify_beamline_configuration.setObjectName("menu_file_modify_beamline_configuration")
        self.menu_powder_all_det = QtWidgets.QAction(MainWindow)
        self.menu_powder_all_det.setObjectName("menu_powder_all_det")
        self.menu_powder_all = QtWidgets.QAction(MainWindow)
        self.menu_powder_all.setObjectName("menu_powder_all")
        self.menu_calib_XFELdetcorr = QtWidgets.QAction(MainWindow)
        self.menu_calib_XFELdetcorr.setObjectName("menu_calib_XFELdetcorr")
        self.menu_powder_all_avg = QtWidgets.QAction(MainWindow)
        self.menu_powder_all_avg.setObjectName("menu_powder_all_avg")
        self.menu_modify_ini_files = QtWidgets.QAction(MainWindow)
        self.menu_modify_ini_files.setObjectName("menu_modify_ini_files")
        self.menuFile.addAction(self.menu_file_command)
        self.menuFile.addAction(self.menu_file_startcrawler)
        self.menuFile.addAction(self.menu_file_newgeometry)
        self.menuFile.addAction(self.menu_file_modify_beamline_configuration)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.menu_file_quit)
        self.menuCheetah.addAction(self.menu_cheetah_processselected)
        self.menuCheetah.addAction(self.menu_cheetah_relabel)
        self.menuCheetah.addAction(self.menu_cheetah_autorun)
        self.menuCheetah.addAction(self.menu_modify_ini_files)
        self.menuAnalysis.addAction(self.menu_analysis_hitrate)
        self.menuAnalysis.addAction(self.menu_analysis_resolution)
        self.menuAnalysis.addAction(self.menu_analysis_saturation)
        self.menuAnalysis.addAction(self.menu_analysis_peakogram)
        self.menu_masks.addAction(self.menu_mask_maker)
        self.menu_masks.addAction(self.menu_mask_badpixdark)
        self.menu_masks.addAction(self.menu_mask_badpixbright)
        self.menu_masks.addAction(self.menu_mask_combine)
        self.menu_masks.addAction(self.menu_mask_makecspadgain)
        self.menu_masks.addAction(self.menu_mask_translatecspadgain)
        self.menu_masks.addAction(self.menu_mask_view)
        self.menuPowder.addAction(self.menu_powder_peaks_hits)
        self.menuPowder.addAction(self.menu_powder_peaks_blank)
        self.menuPowder.addAction(self.menu_powder_hits_det)
        self.menuPowder.addAction(self.menu_powder_hits)
        self.menuPowder.addAction(self.menu_powder_blank_det)
        self.menuPowder.addAction(self.menu_powder_blank)
        self.menuPowder.addAction(self.menu_powder_all_det)
        self.menuPowder.addAction(self.menu_powder_all)
        self.menuPowder.addAction(self.menu_powder_all_avg)
        self.menuLogs.addAction(self.menu_log_batch)
        self.menuLogs.addAction(self.menu_log_cheetah)
        self.menuLogs.addAction(self.menu_log_cheetahstatus)
        self.menuUtilities.addAction(self.menu_utilities_calibman)
        self.menuUtilities.addAction(self.menu_utilities_psocake)
        self.menuCrystFEL.addAction(self.menu_crystfel_mosflmnolatt)
        self.menuCrystFEL.addAction(self.menu_crystfel_indexpdb)
        self.menuCrystFEL.addSeparator()
        self.menuCrystFEL.addAction(self.menu_crystfel_viewindexingresults)
        self.menuCrystFEL.addAction(self.menu_crystfel_cellexplorer)
        self.menuCrystFEL.addAction(self.menu_crystfel_viewindexing_pick)
        self.menuCrystFEL.addAction(self.menu_crystfel_cellexplorer_pick)
        self.menuCrystFEL.addSeparator()
        self.menuCrystFEL.addAction(self.menu_crystfel_mergestreams)
        self.menuCrystFEL.addAction(self.menu_crystfel_listfiles)
        self.menuCrystFEL.addAction(self.menu_crystfel_listevents)
        self.menuCalibration.addAction(self.menu_calib_darkcal)
        self.menuCalibration.addAction(self.menu_calib_copydarkcal)
        self.menuCalibration.addAction(self.menu_calib_setdarkrun)
        self.menuCalibration.addSeparator()
        self.menuCalibration.addAction(self.menu_calib_currentdarkcal)
        self.menuCalibration.addAction(self.menu_calib_currentbadpix)
        self.menuCalibration.addAction(self.menu_calib_currentpeakmask)
        self.menuCalibration.addAction(self.menu_calib_currentgeom)
        self.menuCalibration.addAction(self.menu_calib_cxiviewgeom)
        self.menuCalibration.addAction(self.menu_calib_geomtopixmap)
        self.menuCalibration.addSeparator()
        self.menuCalibration.addAction(self.menu_calib_XFELdetcorr)
        self.menuBar.addAction(self.menuFile.menuAction())
        self.menuBar.addAction(self.menuCheetah.menuAction())
        self.menuBar.addAction(self.menuCalibration.menuAction())
        self.menuBar.addAction(self.menuCrystFEL.menuAction())
        self.menuBar.addAction(self.menu_masks.menuAction())
        self.menuBar.addAction(self.menuPowder.menuAction())
        self.menuBar.addAction(self.menuAnalysis.menuAction())
        self.menuBar.addAction(self.menuUtilities.menuAction())
        self.menuBar.addAction(self.menuLogs.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Cheetah GUI"))
        self.button_refresh.setText(_translate("MainWindow", "Refresh"))
        self.button_runCheetah.setText(_translate("MainWindow", "Run Cheetah"))
        self.button_index.setText(_translate("MainWindow", "Index hits"))
        self.button_viewhits.setText(_translate("MainWindow", "View hits"))
        self.button_blanksum.setText(_translate("MainWindow", "Sum of blanks"))
        self.button_hitsum.setText(_translate("MainWindow", "Sum of hits"))
        self.button_virtualpowder.setText(_translate("MainWindow", "Peak powder"))
        self.button_peakogram.setText(_translate("MainWindow", "Peakogram"))
        self.table_status.setSortingEnabled(True)
        item = self.table_status.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Run"))
        item = self.table_status.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Dataset"))
        item = self.table_status.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Rawdata"))
        item = self.table_status.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Cheetah"))
        item = self.table_status.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "CrystFEL"))
        item = self.table_status.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "H5 Directory"))
        item = self.table_status.horizontalHeaderItem(6)
        item.setText(_translate("MainWindow", "Nprocessed"))
        item = self.table_status.horizontalHeaderItem(7)
        item.setText(_translate("MainWindow", "Nhits"))
        item = self.table_status.horizontalHeaderItem(8)
        item.setText(_translate("MainWindow", "Nindex"))
        item = self.table_status.horizontalHeaderItem(9)
        item.setText(_translate("MainWindow", "Hitrate%"))
        item = self.table_status.horizontalHeaderItem(10)
        item.setText(_translate("MainWindow", "Recipe"))
        item = self.table_status.horizontalHeaderItem(11)
        item.setText(_translate("MainWindow", "Calibration"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuCheetah.setTitle(_translate("MainWindow", "Cheetah"))
        self.menuAnalysis.setTitle(_translate("MainWindow", "Analysis"))
        self.menu_masks.setTitle(_translate("MainWindow", "Masks"))
        self.menuPowder.setTitle(_translate("MainWindow", "View"))
        self.menuLogs.setTitle(_translate("MainWindow", "Logs"))
        self.menuUtilities.setTitle(_translate("MainWindow", "Utilities"))
        self.menuCrystFEL.setTitle(_translate("MainWindow", "CrystFEL"))
        self.menuCalibration.setTitle(_translate("MainWindow", "Calibration"))
        self.menu_file_autorefresh.setText(_translate("MainWindow", "Auto refresh table"))
        self.menu_file_refreshtable.setText(_translate("MainWindow", "Refresh table"))
        self.menu_file_startcrawler.setText(_translate("MainWindow", "Start crawler"))
        self.menu_file_command.setText(_translate("MainWindow", "Unlock command operations"))
        self.menu_file_quit.setText(_translate("MainWindow", "Quit"))
        self.menu_mask_badpixdark.setText(_translate("MainWindow", "Make bad pixel mask from darkcal"))
        self.menu_mask_badpixbright.setText(_translate("MainWindow", "Make bad pixel mask from brightfield"))
        self.actionDefault_particle_display_settings.setText(_translate("MainWindow", "Default particle display settings"))
        self.actionHistogram_clip.setText(_translate("MainWindow", "Histogram clip"))
        self.actionAuto_scale_levels.setText(_translate("MainWindow", "Clamp histogram scale "))
        self.menu_cheetah_processselected.setText(_translate("MainWindow", "Process selected runs"))
        self.menu_cheetah_relabel.setText(_translate("MainWindow", "Label or relabel dataset"))
        self.menu_cheetah_autorun.setText(_translate("MainWindow", "Autorun when new data is ready"))
        self.menu_mask_combine.setText(_translate("MainWindow", "Combine masks"))
        self.menu_mask_makecspadgain.setText(_translate("MainWindow", "Create CSPAD gain map"))
        self.menu_mask_translatecspadgain.setText(_translate("MainWindow", "Translate CSPAD gain map"))
        self.menu_analysis_peakogram.setText(_translate("MainWindow", "Peakogram"))
        self.menu_analysis_saturation.setText(_translate("MainWindow", "Saturation check"))
        self.menu_analysis_hitrate.setText(_translate("MainWindow", "Hit rate plot"))
        self.menu_analysis_resolution.setText(_translate("MainWindow", "Resolution plot"))
        self.menu_powder_hits.setText(_translate("MainWindow", "Virtual powder hits (class 1, photon converted and/or background subtracted)"))
        self.menu_powder_hits_det.setText(_translate("MainWindow", "Virtual powder hits (class 1, detector corrected ADU sum)"))
        self.menu_powder_blank.setText(_translate("MainWindow", "Virtual powder blanks (class 0, photon converted and/or background subtracted)"))
        self.menu_powder_blank_det.setText(_translate("MainWindow", "Virtual powder blanks (class 0, detector corrected ADU sum)"))
        self.menu_powder_peaks_hits.setText(_translate("MainWindow", "Peakfinder virtual powder hits (class 1)"))
        self.menu_powder_peaks_blank.setText(_translate("MainWindow", "Peakfinder virtual powder blanks (class 0)"))
        self.menu_log_batch.setText(_translate("MainWindow", "Batch log file"))
        self.menu_log_cheetah.setText(_translate("MainWindow", "Cheetah log file"))
        self.menu_log_cheetahstatus.setText(_translate("MainWindow", "Cheetah status file"))
        self.menu_mask_maker.setText(_translate("MainWindow", "Mask maker"))
        self.menu_utilities_psocake.setText(_translate("MainWindow", "psocake (Chuck)"))
        self.menu_powder_darkcal.setText(_translate("MainWindow", "View darkcal"))
        self.menu_mask_view.setText(_translate("MainWindow", "View mask file"))
        self.menu_file_newgeometry.setText(_translate("MainWindow", "Change geometry file"))
        self.menu_utilities_calibman.setText(_translate("MainWindow", "calibman (pcds)"))
        self.menu_powder_copydarkcal.setText(_translate("MainWindow", "Copy darkcal.h5 to calib/darkcal"))
        self.menu_crystfel_cellexplorer.setText(_translate("MainWindow", "Cell explorer (selected run)"))
        self.menu_crystfel_viewindexingresults.setText(_translate("MainWindow", "View indexing (selected run)"))
        self.menu_crystfel_mosflmnolatt.setText(_translate("MainWindow", "Index mosflm-raw-nolatt-nocell"))
        self.menu_crystfel_mergestreams.setText(_translate("MainWindow", "Merge stream files"))
        self.menu_calib_darkcal.setText(_translate("MainWindow", "View darkcal"))
        self.menu_calib_copydarkcal.setText(_translate("MainWindow", "Copy darkcal.h5 to calib/darkcal"))
        self.menu_crystfel_listevents.setText(_translate("MainWindow", "List events"))
        self.menu_calib_currentdarkcal.setText(_translate("MainWindow", "Set current darkcal (file)"))
        self.menu_calib_currentbadpix.setText(_translate("MainWindow", "Set current bad pixel mask"))
        self.menu_calib_currentpeakmask.setText(_translate("MainWindow", "Set current analysis region mask"))
        self.menu_calib_currentgeom.setText(_translate("MainWindow", "Set current geometry pixelmap (.h5 for Cheetah)"))
        self.menu_crystfel_indexpdb.setText(_translate("MainWindow", "Index using unit cell info"))
        self.menu_crystfel_cellexplorer_pick.setText(_translate("MainWindow", "Cell explorer (pick stream file)"))
        self.menu_crystfel_viewindexing_pick.setText(_translate("MainWindow", "View indexing (pick stream file)"))
        self.menu_crystfel_indexgeopt.setText(_translate("MainWindow", "Index for geoptimiser"))
        self.menu_crystfel_listfiles.setText(_translate("MainWindow", "List files"))
        self.menu_calib_geomtopixmap.setText(_translate("MainWindow", "Geometry to pixelmap (.geom to .h5)"))
        self.menu_calib_setdarkrun.setText(_translate("MainWindow", "Set run as current darkcal (copy + set)"))
        self.menu_calib_cxiviewgeom.setText(_translate("MainWindow", "Set current geometry (.geom/.h5 for cxiview)"))
        self.menu_file_modify_beamline_configuration.setText(_translate("MainWindow", "Modify beamline configuration"))
        self.menu_powder_all_det.setText(_translate("MainWindow", "Virtual powder all (detector corrected only)"))
        self.menu_powder_all.setText(_translate("MainWindow", "Virtual powder all (background subtracted sum)"))
        self.menu_calib_XFELdetcorr.setText(_translate("MainWindow", "Run XFEL detector calibration script"))
        self.menu_powder_all_avg.setText(_translate("MainWindow", "Virtual powder all (background corrected averavge)"))
        self.menu_modify_ini_files.setText(_translate("MainWindow", "Modify .ini files"))

